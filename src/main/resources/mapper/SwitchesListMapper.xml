<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.albumenj.switchmonitor.dao.SwitchesListMapper">
    <resultMap id="BaseResultMap" type="cn.albumenj.switchmonitor.bean.SwitchesList">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="model" property="model" jdbcType="VARCHAR"/>
        <result column="building" property="building" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="read_key" property="readKey" jdbcType="VARCHAR"/>
        <result column="write_key" property="writeKey" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
            id,
            ip,
            model,
            building,
            description,
            read_key,
            write_key
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="switchesList.id">
        INSERT INTO switches_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="switchesList.id!=null">id,</if>
            <if test="switchesList.ip!=null">ip,</if>
            <if test="switchesList.model!=null">model,</if>
            <if test="switchesList.building!=null">building,</if>
            <if test="switchesList.description!=null">description,</if>
            <if test="switchesList.readKey!=null">read_key,</if>
            <if test="switchesList.writeKey!=null">write_key</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="switchesList.id!=null">#{switchesList.id,jdbcType=INTEGER},</if>
            <if test="switchesList.ip!=null">#{switchesList.ip,jdbcType=VARCHAR},</if>
            <if test="switchesList.model!=null">#{switchesList.model,jdbcType=VARCHAR},</if>
            <if test="switchesList.building!=null">#{switchesList.building,jdbcType=VARCHAR},</if>
            <if test="switchesList.description!=null">#{switchesList.description,jdbcType=VARCHAR},</if>
            <if test="switchesList.readKey!=null">#{switchesList.readKey,jdbcType=VARCHAR},</if>
            <if test="switchesList.writeKey!=null">#{switchesList.writeKey,jdbcType=VARCHAR}</if>
        </trim>
    </insert>

    <insert id="insertList">
        INSERT INTO switches_list(
        id,
        ip,
        model,
        building,
        description,
        read_key,
        write_key
        )VALUES
        <foreach collection="switchesLists" item="switchesList" index="index" separator=",">
            (
            #{switchesList.id,jdbcType=INTEGER},
            #{switchesList.ip,jdbcType=VARCHAR},
            #{switchesList.model,jdbcType=VARCHAR},
            #{switchesList.building,jdbcType=VARCHAR},
            #{switchesList.description,jdbcType=VARCHAR},
            #{switchesList.readKey,jdbcType=VARCHAR},
            #{switchesList.writeKey,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="update">
        UPDATE switches_list
        <set>
            <if test="switchesList.id != null">id = #{switchesList.id,jdbcType=INTEGER},</if>
            <if test="switchesList.ip != null">ip = #{switchesList.ip,jdbcType=VARCHAR},</if>
            <if test="switchesList.model != null">model = #{switchesList.model,jdbcType=VARCHAR},</if>
            <if test="switchesList.building != null">building = #{switchesList.building,jdbcType=VARCHAR},</if>
            <if test="switchesList.description != null">description = #{switchesList.description,jdbcType=VARCHAR},</if>
            <if test="switchesList.readKey != null">read_key = #{switchesList.readKey,jdbcType=VARCHAR},</if>
            <if test="switchesList.writeKey != null">write_key = #{switchesList.writeKey,jdbcType=VARCHAR}</if>
        </set>
        WHERE id = #{switchesList.id,jdbcType=INTEGER}
    </update>

    <select id="select" resultMap="BaseResultMap">
        SELECT * from switch_monitor.switches_list
        WHERE 1 = 1
        <trim prefix="AND (" suffix=")" suffixOverrides=",">
            <if test="switchesList.id != null">id = #{switchesList.id,jdbcType=INTEGER},</if>
            <if test="switchesList.ip != null">ip = #{switchesList.ip,jdbcType=VARCHAR},</if>
            <if test="switchesList.model != null">model = #{switchesList.model,jdbcType=VARCHAR},</if>
            <if test="switchesList.building != null">building = #{switchesList.building,jdbcType=VARCHAR},</if>
            <if test="switchesList.description != null">description = #{switchesList.description,jdbcType=VARCHAR},</if>
            <if test="switchesList.readKey != null">read_key = #{switchesList.readKey,jdbcType=VARCHAR},</if>
            <if test="switchesList.writeKey != null">write_key = #{switchesList.writeKey,jdbcType=VARCHAR}</if>
        </trim>
        ORDER BY
        switches_list.id ASC
    </select>

    <select id="selectOnline" resultMap="BaseResultMap">
        SELECT * from switch_monitor.switches_list
        INNER JOIN switches_reachable ON switches_list.id = switches_reachable.switch_id
        WHERE 1 = 1
        <trim prefix="AND (" suffix=")" suffixOverrides=",">
            <if test="switchesList.id != null">id = #{switchesList.id,jdbcType=INTEGER},</if>
            <if test="switchesList.ip != null">ip = #{switchesList.ip,jdbcType=VARCHAR},</if>
            <if test="switchesList.model != null">model = #{switchesList.model,jdbcType=VARCHAR},</if>
            <if test="switchesList.building != null">building = #{switchesList.building,jdbcType=VARCHAR},</if>
            <if test="switchesList.description != null">description = #{switchesList.description,jdbcType=VARCHAR},</if>
            <if test="switchesList.readKey != null">read_key = #{switchesList.readKey,jdbcType=VARCHAR},</if>
            <if test="switchesList.writeKey != null">write_key = #{switchesList.writeKey,jdbcType=VARCHAR}</if>
        </trim>
        AND
        switches_reachable.reachable = 1
        ORDER BY
        switches_list.id ASC
    </select>

    <delete id="delete">
        DELETE
        FROM switches_list
        WHERE id = #{switchesList.id,jdbcType=INTEGER}
    </delete>

    <select id="selectBuilding" resultType="string">
        SELECT DISTINCT switches_list.building
        FROM switches_list
        ORDER BY switches_list.id ASC
    </select>

</mapper>

